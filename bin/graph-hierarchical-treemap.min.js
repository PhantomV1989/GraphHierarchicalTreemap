// https://javascript-minifier.com/
let GraphHierarchicalTreemap={minPxSize:10,maxDepth:20,pixelCorrection:8,xPortCount:1,yPortCount:1,nodes:{},links:{},connectivityGraphs:new Map,rectPorts:new Map,drawnStokesForDepth:new Map,drawnNodesOfSameDepth:new Map,drawnNodesBetween2ImmediateNodeIDs:new Map,nodeAddressLookup:new Map,nodePathIndex:new Map,depthPadding:new Map,coloring:{line:void 0,rect:void 0},mouseoverState:!1,tcircles:[]};class Point{constructor(e,r){this.x=e,this.y=r}getUniqueKey(){return this.x+"_"+this.y}checkSame(e){return this.x==e.x&&this.y==e.y}}class HierarchicalNode{constructor(e,r){this.name=e,this.value=r,this.children=new Map}addChild(e){this.children.set(e.name,e)}addGrandchild(e,r){this.find(e).addChild(r),GraphHierarchicalTreemap.nodeAddressLookup[r.name]=e}find(e){return 0==e.length?this:this.name==e[0]?1==e.length?this:this.children.get(e[1]).find(e.slice(1)):void 0}createImmediateObject(){let e=this._createMapObject();return this.children.forEach(r=>e.children.push(r._createMapObject())),e}_createMapObject(){return{n:this.name,v:this.value,children:[]}}}let RootNode=new HierarchicalNode("root",0),LinksWaitingList=new Set;class Snappables{constructor(){this.x=new Set,this.y=new Set}}function Interpolate(e,r,a){let t=[],i=(r-e)/(a+1);for(let r=0;r<a+1;r++)t.push(Math.round(e+i*r));return t.push(r),t}function DrawPath(e,r,a){for(let t=a;t<e.length;t++){let a=DrawLinesFor2NodeIDs(e[t],e[t+1]);if(!a){null==LinksWaitingList[e[t+1]]&&(LinksWaitingList[e[t+1]]=[]),LinksWaitingList[e[t+1]].push([r,t+1]);break}GetStrokeIDsFromNodePath(a)}}function CalculateConnectivity(e,r){function a(e,r){return("x"==r?n.x:n.y).forEach(r=>{Math.abs(e-r)<=GraphHierarchicalTreemap.pixelCorrection&&(e=r)}),"x"==r?n.x.add(e):n.y.add(e),e}function t(e,r){var a,t;i.has(e)||i.set(e,new Set),i.has(r)||i.set(r,new Set),null===(a=i.get(e))||void 0===a||a.add(r),null===(t=i.get(r))||void 0===t||t.add(e)}let i=new Map,n=new Snappables;r=Math.round(r/2);let l=$(null!=GraphHierarchicalTreemap.nodeAddressLookup[e]?".p-"+GraphHierarchicalTreemap.nodeAddressLookup[e].concat(e).join("-"):".p-"+e),c=GraphHierarchicalTreemap.rectPorts.get(e),o=Array();if(null!=c)for(let e=0;e<c.length;e++){let i=new Point(c[e].x,c[e].y);e<2*GraphHierarchicalTreemap.xPortCount?i.y=a(e%2==0?i.y+r:i.y-r,"y"):i.x=a(e%2==0?i.x-r:i.x+r,"x"),t(c[e].getUniqueKey(),i.getUniqueKey()),o.push(i)}function h(e,r){let a=function(e,r){if(o!=[])for(let a=0;a<o.length;a++){let t=o[a];if(a<2*GraphHierarchicalTreemap.xPortCount){if(t.x<=r.x&&t.x>=e.x&&e.y==t.y&&r.y==e.y)return t}else if(t.y<=r.y&&t.y>=e.y&&t.x==e.x&&e.x==r.x)return t}}(e,r),i=e.getUniqueKey(),n=r.getUniqueKey();if(a)if(a!=r){let e=a.getUniqueKey();t(i,e),t(e,n)}else t(i,n);else t(i,n)}function p(e,r,a){h(new Point(e,a),new Point(r,a))}function d(e,r,a){h(new Point(e,r),new Point(e,a))}for(let e=0;e<l.length;e++){let i=+l[e].getAttribute("x")-r,n=+l[e].getAttribute("y")-r,c=l[e].firstChild;GraphHierarchicalTreemap.rectPorts.set(c.id,Array());let o=+c.style.width.replace("px","")+2*r,h=+c.style.height.replace("px","")+2*r;i=a(i,"x"),n=a(n,"y");let s=a(i+o,"x"),m=a(n+h,"y"),u=Interpolate(i,s,GraphHierarchicalTreemap.xPortCount),f=Interpolate(n,m,GraphHierarchicalTreemap.yPortCount);for(let e=0;e<u.length;e++)e>0&&e<u.length-1&&(t(u[e]+"_"+n,u[e]+"_"+(n+r)),GraphHierarchicalTreemap.rectPorts.get(c.id).push(new Point(u[e],n+r)),t(u[e]+"_"+m,u[e]+"_"+(m-r)),GraphHierarchicalTreemap.rectPorts.get(c.id).push(new Point(u[e],m-r))),e<u.length-1&&(p(u[e],u[e+1],n),p(u[e],u[e+1],m));for(let e=0;e<f.length;e++)e>0&&e<f.length-1&&(t(s-r+"_"+f[e],s+"_"+f[e]),GraphHierarchicalTreemap.rectPorts.get(c.id).push(new Point(s-r,f[e])),t(i+r+"_"+f[e],i+"_"+f[e]),GraphHierarchicalTreemap.rectPorts.get(c.id).push(new Point(i+r,f[e]))),e<f.length-1&&(t(i+"_"+f[e+1],i+"_"+f[e]),t(s+"_"+f[e+1],s+"_"+f[e]),d(i,f[e],f[e+1]),d(s,f[e],f[e+1]))}return i}function DebugDrawConnectivity(e,r){const a=d3.select("#root");let t=e.keys();for(;;){let i=t.next();if(i.done)break;let n=i.value,l=n.split("_"),c=+l[0],o=+l[1];e.get(n).forEach(e=>{let t=+(e=e.split("_"))[0],i=+e[1];a.append("line").style("stroke","red").style("stroke-width",r/5).attr("x1",c).attr("y1",o).attr("x2",t).attr("y2",i)})}}function GetStrokeIDsFromNodePath(e){let r=[];for(let a=0;a<e.length-1;a++)r.push([e[a],e[a+1]].join("-"));return r}function findBestPath(e,r,a,t){if(e in GraphHierarchicalTreemap.drawnNodesOfSameDepth&&r in GraphHierarchicalTreemap.drawnNodesOfSameDepth[e])return GraphHierarchicalTreemap.drawnNodesOfSameDepth[e][r];e in GraphHierarchicalTreemap.drawnNodesOfSameDepth||(GraphHierarchicalTreemap.drawnNodesOfSameDepth[e]=new Map),r in GraphHierarchicalTreemap.drawnNodesOfSameDepth[e]||(GraphHierarchicalTreemap.drawnNodesOfSameDepth[e][r]=Array());let i=[[e]],n=new Set([e]);for(""!=a&&null!=a||(a="root");i.length>0;){let l=i.shift(),c=l.slice(-1)[0],o=[];GraphHierarchicalTreemap.connectivityGraphs[a].get(c).forEach(e=>{if(!n.has(e)){let r=_getK1K2(c,e);if(null!=GraphHierarchicalTreemap.drawnStokesForDepth[t]&&null!=GraphHierarchicalTreemap.drawnStokesForDepth[t][r[0]]&&null!=GraphHierarchicalTreemap.drawnStokesForDepth[t][r[0]][r[1]]&&GraphHierarchicalTreemap.drawnStokesForDepth[t][r[0]][r[1]]!=r[2])return;o.push(e)}});for(let a=0;a<o.length;a++){let t=o[a];if(t==r)return GraphHierarchicalTreemap.drawnNodesOfSameDepth[e][r]=l.concat(t),GraphHierarchicalTreemap.drawnNodesOfSameDepth[e][r];n.add(t),i.push(l.concat(t))}}return!1}let _getK1K2=function(e,r){let a=e.split("_").map(e=>+e),t=r.split("_").map(e=>+e);return a[0]<t[0]?[e,r,!0]:t[0]<a[0]?[r,e,!1]:a[1]<t[1]?[e,r,!0]:t[1]<a[1]?[r,e,!1]:void 0};function _drawLinesSameDepth(e,r){const a=d3.select(".depth"+(r-1));r in GraphHierarchicalTreemap.drawnStokesForDepth||(GraphHierarchicalTreemap.drawnStokesForDepth[r]=new Set);for(let t=0;t<e.length-1;t++){let i=_getK1K2(e[t],e[t+1]);if(null!=GraphHierarchicalTreemap.drawnStokesForDepth[r][i[0]]){if(null!=GraphHierarchicalTreemap.drawnStokesForDepth[r][i[0]][i[1]])continue}else GraphHierarchicalTreemap.drawnStokesForDepth[r][i[0]]={};let n=e[t].split("_"),l=+n[0],c=+n[1],o=e[t+1].split("_"),h=+o[0],p=+o[1],d=Math.floor(GraphHierarchicalTreemap.depthPadding[r-1]/4);a.append("line").style("stroke",GraphHierarchicalTreemap.coloring.line(r)).style("stroke-width",0==d?1:d).attr("class","st-"+[e[t],e[t+1]].join("-")).attr("stroke-linecap","round").attr("x1",l).attr("y1",c).attr("x2",h).attr("y2",p).attr("depth",r);GraphHierarchicalTreemap.drawnStokesForDepth[r][i[0]][i[1]]=i[2]}}function DrawLinesFor2NodeIDs(e,r){if(null==GraphHierarchicalTreemap.nodeAddressLookup[e]||null==GraphHierarchicalTreemap.nodeAddressLookup[r])return!1;let a=0,t=0;if(GraphHierarchicalTreemap.drawnNodesBetween2ImmediateNodeIDs[e]){if(GraphHierarchicalTreemap.drawnNodesBetween2ImmediateNodeIDs[e][r])return GraphHierarchicalTreemap.drawnNodesBetween2ImmediateNodeIDs[e][r]}else GraphHierarchicalTreemap.drawnNodesBetween2ImmediateNodeIDs[e]={};if(e in GraphHierarchicalTreemap.drawnNodesOfSameDepth&&r in GraphHierarchicalTreemap.drawnNodesOfSameDepth[e])return GraphHierarchicalTreemap.drawnNodesOfSameDepth[e][r];if(e==r)return[];let i=GraphHierarchicalTreemap.nodeAddressLookup[e].concat([e]),n=GraphHierarchicalTreemap.nodeAddressLookup[r].concat([r]),l=i.join("."),c=n.join(".");l.startsWith(c)&&(t=0),c.startsWith(l)&&(t=0,c=[l,l=c][0]);let o=i.length,h=n.length,p=Math.max(o,h),d=Math.min(o,h),s=[],m=0,u=function(e,r){return GraphHierarchicalTreemap.rectPorts.get(e)[r].getUniqueKey()};for(let e=0;e<=d;e++){let r=i[e],l=e==d?n[e-1]:n[e];if(r!=l||e==d){let n=function(n,c){let o=findBestPath(u(r,n),u(l,c),i[e-1],e);o&&o.length<s.length&&(s=o,a=n,t=c)};s=findBestPath(u(r,0),u(l,0),i[e-1],e),n(0,1),n(1,0),n(1,1),n(2,2),n(2,3),n(3,2),n(3,3),m=e;for(let r=e;r<p;r++)r>0&&_drawLinesSameDepth(s,r);break}}if(s.length>0){let l=i[m];for(let e=m+1;e<o;e++){let r=i[e],t=u(r,a),n=u(l,a);if(n!=s[0])throw"Mismatched ports";let c=findBestPath(t,n,l,e);if(!c)break;for(let r=e;r<p;r++)_drawLinesSameDepth(c,r);s=c.slice(0,-1).concat(s),l=r}let c=n[m];for(let e=m+1;e<h;e++){let r=n[e],a=u(r,t),i=u(c,t);if(i!=s[s.length-1])throw"Mismatched ports";let l=findBestPath(i,a,c,e);if(!l)break;for(let r=e;r<p;r++)_drawLinesSameDepth(l,r);s=s.slice(0,-1).concat(l),c=r}return GraphHierarchicalTreemap.drawnNodesBetween2ImmediateNodeIDs[e][r]=s,s}return console.log("Bug: diff parents"),!1}function FindArbDistance(e,r){return Math.abs(e.x-r.x)+Math.abs(e.y-r.y)}function drawGraphHierarchicalTreemap(e,r,a,t,i=!1,n){n||"root"!=e.n||(RootNode.name=e.n,RootNode.value=e.v,n=[],GraphHierarchicalTreemap.coloring.rect||(GraphHierarchicalTreemap.coloring.rect=a||createDefaultColorScheme(e)),GraphHierarchicalTreemap.coloring.line||(GraphHierarchicalTreemap.coloring.line=t||d3.scaleSequential([GraphHierarchicalTreemap.maxDepth,0],d3.interpolateSinebow))),GraphHierarchicalTreemap.nodes=e,GraphHierarchicalTreemap.links=r,createHierarchicalTreemap(e,i,n)}function drawTreemap(e,r,a){let t=!1,i=a.length;if(0==e.children.length)return!0;let n=e.n,l=$("#"+n)[0];if(null==l)return t;let c=+l.style.width.replace("px",""),o=+l.style.height.replace("px",""),h=c/30+i;i in GraphHierarchicalTreemap.depthPadding?GraphHierarchicalTreemap.depthPadding[i]=4*GraphHierarchicalTreemap.depthPadding[i]/5+1*h/5:GraphHierarchicalTreemap.depthPadding[i]=h,i>0&&GraphHierarchicalTreemap.depthPadding[i-1]<GraphHierarchicalTreemap.depthPadding[i]&&(GraphHierarchicalTreemap.depthPadding[i]=7*GraphHierarchicalTreemap.depthPadding[i-1]/8),e.v=0;const p=(e=>d3.treemap().tile(d3.treemapSquarify.ratio(1.1)).size([c,o]).paddingOuter(h).paddingInner(h).round(!0)(d3.hierarchy(e).sum(e=>e.v)))(e);let d=d3.group(p,e=>e.depth),s="#g-"+n;s=s.replace(/\./g,"\\.");let m=$(s)[0],u=null==m?0:+m.getAttribute("x"),f=null==m?0:+m.getAttribute("y"),T=d.get(0),y=d.get(1);function g(e,r,i){if(e.x1-e.x0<GraphHierarchicalTreemap.minPxSize||e.y1-e.y0<GraphHierarchicalTreemap.minPxSize);else if(t=!0,null==GraphHierarchicalTreemap.nodeAddressLookup[e.data.n]){let t="depth"+r,n=(d3.select("."+t).size()>0?d3.select("."+t):d3.select("#root").append("g").attr("class",t)).append("g"),l="p-"+(null!=i?i:"");n.attr("transform",`translate(${u+e.x0},${f+e.y0})`).attr("x",u+e.x0).attr("y",f+e.y0).attr("class",l).attr("id","g-"+e.data.n);let c=n.append("rect").attr("id",e.data.n).style("width",e.x1-e.x0+"px").style("height",e.y1-e.y0+"px");"root"!=e.data.n&&c.on("mouseover",mouseover).on("mousemove",mousemove).on("mouseleave",mouseleave),"root"!=e.data.n&&(c.style("fill",GraphHierarchicalTreemap.coloring.rect(a.length>1?a[1]:e.data.n)(r)),RootNode.addGrandchild(a,new HierarchicalNode(e.data.n,e.data.v)))}}T.forEach(e=>g(e,i,a.join("-"))),a=a.concat([e.n]),y.forEach(e=>g(e,i+1,a.join("-")));let G=CalculateConnectivity(e.n,h);return GraphHierarchicalTreemap.connectivityGraphs[e.n]=G,r&&DebugDrawConnectivity(G,h),t&&e.children.forEach(e=>{if(null!=LinksWaitingList[e.n]&&LinksWaitingList[e.n].forEach(e=>{let r=GraphHierarchicalTreemap.links[e[0][0]][e[0][1]];DrawPath(r=[e[0][0]].concat(r),e[0],e[1]-1)}),e.n in GraphHierarchicalTreemap.links){let r=GraphHierarchicalTreemap.links[e.n];null==GraphHierarchicalTreemap.nodePathIndex[e.n]&&(GraphHierarchicalTreemap.nodePathIndex[e.n]=[]);for(let a=0;a<r.length;a++)GraphHierarchicalTreemap.nodePathIndex[e.n].push([e.n,a]),r[a].forEach(r=>{null==GraphHierarchicalTreemap.nodePathIndex[r]&&(GraphHierarchicalTreemap.nodePathIndex[r]=[]),GraphHierarchicalTreemap.nodePathIndex[r].push([e.n,a])}),DrawPath([e.n].concat(r[a]),[e.n,a],0)}}),t}function createDefaultColorScheme(e){let r=e=>d3.scaleSequential([GraphHierarchicalTreemap.maxDepth,0],e),a=[r(d3.interpolateInferno),r(d3.interpolateViridis),r(d3.interpolateTurbo),r(d3.interpolateRdYlGn),r(d3.interpolateCool),r(d3.interpolateWarm),r(d3.interpolateBrBG),r(d3.interpolateSinebow),r(d3.interpolatePiYG),r(d3.interpolateRainbow),r(d3.interpolatePRGn)],t=new Map;return e.c.forEach(e=>{let r=Math.floor(Math.random()*a.length);t.set(e.n,a[r])}),function(e){return t.get(e)?t.get(e):d3.scaleSequential([GraphHierarchicalTreemap.maxDepth,0],d3.interpolateBlues)}}function findEstimatedLargerSqrt(e){let r=Math.max(1,e/1e3|0),a=1;for(a=1;a<e/2;a+=r)if(a*a>e)return a;return a}function createHierarchicalTreemap(e,r=!1,a){if("c"in e){let t=0,i=0;e.c.forEach(e=>{e.v=findEstimatedLargerSqrt(e.v),t=Math.max(t,e.v)});let n={n:e.n,v:e.v,children:[]};e.c.forEach(e=>{n.children.push({n:e.n,v:e.v*t,children:[]}),i+=e.v*t}),n.v=i,drawTreemap(n,r,a)&&(a=a.concat(e.n),e.c.forEach(e=>{setTimeout(()=>{createHierarchicalTreemap(e,r,a)},0)}))}}var Tooltip=createTooltip();function createTooltip(){return d3.select("#svg-container").append("div").style("opacity",0).attr("class","tooltip").style("background-color","white").style("border","solid").style("border-width","2px").style("border-radius","5px").style("padding","5px")}function mouseover(e){if(!GraphHierarchicalTreemap.mouseoverState&&(GraphHierarchicalTreemap.mouseoverState=!0,Tooltip.style("opacity",1),d3.selectAll("rect").style("opacity",.1),d3.selectAll("line").style("stroke-opacity",.1),d3.select(this).style("opacity",1),d3.selectAll("g[class^='p-"+GraphHierarchicalTreemap.nodeAddressLookup[this.id].concat(this.id).join("-")+"']").selectAll("rect").style("opacity",1),null!=GraphHierarchicalTreemap.nodePathIndex[this.id])){GraphHierarchicalTreemap.nodePathIndex[this.id].forEach(e=>{let r=[e[0]].concat(GraphHierarchicalTreemap.links[e[0]][e[1]]);for(let e=0;e<r.length-1;e++){d3.select("#"+r[e]).style("opacity",1),d3.select("#"+r[e+1]).style("opacity",1),GetStrokeIDsFromNodePath(GraphHierarchicalTreemap.drawnNodesBetween2ImmediateNodeIDs[r[e]][r[e+1]]).forEach(e=>{d3.selectAll(".st-"+e).style("stroke-opacity",1),GraphHierarchicalTreemap.tcircles.push(applyDirectionalMovementToStroke(e,+d3.select(".st-"+e).style("stroke-width").replace("px","")/2))})}})}}function mousemove(e){Tooltip.html(this.id).style("left",e.x+20+"px").style("top",e.y-40+"px")}function mouseleave(e){for(GraphHierarchicalTreemap.mouseoverState=!1;GraphHierarchicalTreemap.tcircles.length>0;)clearInterval(GraphHierarchicalTreemap.tcircles.shift());d3.selectAll(".ght-tcircle").remove(),Tooltip.style("opacity",0),d3.selectAll("rect").style("opacity",1),d3.selectAll("line").style("stroke-opacity",1)}function applyDirectionalMovementToStroke(e,r){let a=e.split("-").map(e=>e.split("_").map(e=>+e)),t=function(){var e=d3.transition().duration(1e3).ease(d3.easeLinear);d3.select("svg").append("circle").attr("class","ght-tcircle").attr("cx",a[0][0]).attr("cy",a[0][1]).attr("r",r).attr("fill","red").transition(e).attr("cx",a[1][0]).attr("cy",a[1][1]).remove()};return t(),setInterval(()=>{t()},1e3)}