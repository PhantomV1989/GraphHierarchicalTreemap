// https://javascript-minifier.com/
let GraphHierarchicalTreemap={minPxSize:10,maxDepth:20,pixelCorrection:8,xPortCount:1,yPortCount:1,connectivityGraphs:new Map,rectPorts:new Map,drawnLines:new Map,drawnLinks:new Map,depthPadding:new Map,coloring:{line:void 0,rect:void 0}},NodeLookup=new Map;class Point{constructor(e,r){this.x=e,this.y=r}getUniqueKey(){return this.x+"_"+this.y}checkSame(e){return this.x==e.x&&this.y==e.y}}class HierarchicalNode{constructor(e,r){this.name=e,this.value=r,this.children=new Map}addChild(e){this.children.set(e.name,e)}addGrandchild(e,r){this.find(e).addChild(r),NodeLookup[r.name]=e}find(e){return 0==e.length?this:this.name==e[0]?1==e.length?this:this.children.get(e[1]).find(e.slice(1)):void 0}createImmediateObject(){let e=this._createMapObject();return this.children.forEach(r=>e.children.push(r._createMapObject())),e}_createMapObject(){return{n:this.name,v:this.value,children:[]}}}class HierarchicalLinks{}let RootNode=new HierarchicalNode("root",0);class Snappables{constructor(){this.x=new Set,this.y=new Set}}function CalculateConnectivity(e,r){let t=new Map,a=new Snappables;r=Math.round(r/2);let i=$(".p-"+e);function n(e,r){return("x"==r?a.x:a.y).forEach(r=>{Math.abs(e-r)<=GraphHierarchicalTreemap.pixelCorrection&&(e=r)}),"x"==r?a.x.add(e):a.y.add(e),e}function l(e,r){var a,i;t.has(e)||t.set(e,new Set),t.has(r)||t.set(r,new Set),null===(a=t.get(e))||void 0===a||a.add(r),null===(i=t.get(r))||void 0===i||i.add(e)}function c(e,r,t){let a=[],i=(r-e)/(t+1);for(let r=0;r<t+1;r++)a.push(Math.round(e+i*r));return a.push(r),a}let h=GraphHierarchicalTreemap.rectPorts.get(e),o=Array();if(null!=h)for(let e=0;e<h.length;e++){let t=new Point(h[e].x,h[e].y);e<2*GraphHierarchicalTreemap.xPortCount?t.y=n(e%2==0?t.y+r:t.y-r,"y"):t.x=n(e%2==0?t.x-r:t.x+r,"x"),l(h[e].getUniqueKey(),t.getUniqueKey()),o.push(t)}function p(e,r){let t=function(e,r){if(o!=[])for(let t=0;t<o.length;t++){let a=o[t];if(t<2*GraphHierarchicalTreemap.xPortCount){if(a.x<=r.x&&a.x>=e.x&&e.y==a.y&&r.y==e.y)return a}else if(a.y<=r.y&&a.y>=e.y&&a.x==e.x&&e.x==r.x)return a}}(e,r),a=e.getUniqueKey(),i=r.getUniqueKey();if(t)if(t!=r){let e=t.getUniqueKey();l(a,e),l(e,i)}else l(a,i);else l(a,i)}function d(e,r,t){p(new Point(e,t),new Point(r,t))}function s(e,r,t){p(new Point(e,r),new Point(e,t))}for(let e=0;e<i.length;e++){let t=+i[e].getAttribute("x")-r,a=+i[e].getAttribute("y")-r,h=i[e].firstChild;GraphHierarchicalTreemap.rectPorts.set(h.id,Array());let o=+h.style.width.replace("px","")+2*r,p=+h.style.height.replace("px","")+2*r;t=n(t,"x"),a=n(a,"y");let u=n(t+o,"x"),f=n(a+p,"y"),g=c(t,u,GraphHierarchicalTreemap.xPortCount),m=c(a,f,GraphHierarchicalTreemap.yPortCount);for(let e=0;e<g.length;e++)e>0&&e<g.length-1&&(l(g[e]+"_"+a,g[e]+"_"+(a+r)),GraphHierarchicalTreemap.rectPorts.get(h.id).push(new Point(g[e],a+r)),l(g[e]+"_"+f,g[e]+"_"+(f-r)),GraphHierarchicalTreemap.rectPorts.get(h.id).push(new Point(g[e],f-r))),e<g.length-1&&(d(g[e],g[e+1],a),d(g[e],g[e+1],f));for(let e=0;e<m.length;e++)e>0&&e<m.length-1&&(l(u-r+"_"+m[e],u+"_"+m[e]),GraphHierarchicalTreemap.rectPorts.get(h.id).push(new Point(u-r,m[e])),l(t+r+"_"+m[e],t+"_"+m[e]),GraphHierarchicalTreemap.rectPorts.get(h.id).push(new Point(t+r,m[e]))),e<m.length-1&&(l(t+"_"+m[e+1],t+"_"+m[e]),l(u+"_"+m[e+1],u+"_"+m[e]),s(t,m[e],m[e+1]),s(u,m[e],m[e+1]))}return t}function DebugDrawConnectivity(e,r){const t=d3.select("#root");let a=e.keys();for(;;){let i=a.next();if(i.done)break;let n=i.value,l=n.split("_"),c=+l[0],h=+l[1];e.get(n).forEach(e=>{let a=+(e=e.split("_"))[0],i=+e[1];t.append("line").style("stroke","red").style("stroke-width",r/5).attr("x1",c).attr("y1",h).attr("x2",a).attr("y2",i)})}}function FindBestPath(e,r,t){if(e in GraphHierarchicalTreemap.drawnLinks&&r in GraphHierarchicalTreemap.drawnLinks[e])return GraphHierarchicalTreemap.drawnLinks[e][r];e in GraphHierarchicalTreemap.drawnLinks||(GraphHierarchicalTreemap.drawnLinks[e]=new Map),r in GraphHierarchicalTreemap.drawnLinks[e]||(GraphHierarchicalTreemap.drawnLinks[e][r]=Array());let a=[[e]],i=new Set([e]);for(""!=t&&null!=t||(t="root");a.length>0;){let n=a.shift(),l=n.slice(-1)[0],c=[];GraphHierarchicalTreemap.connectivityGraphs[t].get(l).forEach(e=>{i.has(e)||c.push(e)});for(let t=0;t<c.length;t++){let l=c[t];if(l==r)return GraphHierarchicalTreemap.drawnLinks[e][r]=n.concat(l),GraphHierarchicalTreemap.drawnLinks[e][r];i.add(l),a.push(n.concat(l))}}throw"No path found, please increase pixelCorrection"}function DrawLinks(e,r){if(e in GraphHierarchicalTreemap.drawnLinks&&r in GraphHierarchicalTreemap.drawnLinks[e])return GraphHierarchicalTreemap.drawnLinks[e][r];if(e==r)return[];let t=NodeLookup[e].concat([e]),a=NodeLookup[r].concat([r]),i=t.length,n=a.length,l=Math.max(i,n);function c(e,r){const t=d3.select("#root");r in GraphHierarchicalTreemap.drawnLines||(GraphHierarchicalTreemap.drawnLines[r]=new Set);for(let a=0;a<e.length-1;a++){let i=[e[a],e[a+1]].sort().join(".");if(GraphHierarchicalTreemap.drawnLines[r].has(i))continue;let n=e[a].split("_"),l=+n[0],c=+n[1],h=e[a+1].split("_"),o=+h[0],p=+h[1],d=Math.round(GraphHierarchicalTreemap.depthPadding[r-1]/4);t.insert("line",".depth"+(r+1)).style("stroke",GraphHierarchicalTreemap.coloring.line(r)).style("stroke-width",0==d?1:d).attr("stroke-linecap","round").attr("x1",l).attr("y1",c).attr("x2",o).attr("y2",p);GraphHierarchicalTreemap.drawnLines[r].add(i)}}let h=Math.min(i,n),o=[],p=0;for(let e=0;e<h;e++){let r=t[e],i=a[e];if(r!=i){o=FindBestPath(GraphHierarchicalTreemap.rectPorts.get(r)[0].getUniqueKey(),GraphHierarchicalTreemap.rectPorts.get(i)[1].getUniqueKey(),t[e-1]),p=e;for(let r=e;r<=l;r++)r>0&&c(o,r);break}}if(o.length>0){let e=t[p];for(let r=p+1;r<i;r++){let a=t[r],i=GraphHierarchicalTreemap.rectPorts.get(a)[0].getUniqueKey(),n=GraphHierarchicalTreemap.rectPorts.get(e)[0].getUniqueKey();if(n!=o[0])throw"Mismatched ports";let h=FindBestPath(i,n,e);for(let e=r;e<=l;e++)c(h,e);o=h.slice(0,-1).concat(o),e=a}let r=a[p];for(let e=p+1;e<n;e++){let t=a[e],i=GraphHierarchicalTreemap.rectPorts.get(t)[1].getUniqueKey(),n=GraphHierarchicalTreemap.rectPorts.get(r)[1].getUniqueKey();if(n!=o[o.length-1])throw"Mismatched ports";let h=FindBestPath(n,i,r);for(let r=e;r<=l;r++)c(h,r);o=o.slice(0,-1).concat(h),r=t}return o}console.log("Bug: diff parents")}function drawGraphHierarchicalTreemap(e,r,t,a,i=!1,n){if(!n&&"root"==e.n){RootNode.name=e.n,RootNode.value=e.v,n=[],GraphHierarchicalTreemap.coloring.rect||(GraphHierarchicalTreemap.coloring.rect=t||createDefaultColorScheme(e)),GraphHierarchicalTreemap.coloring.line||(GraphHierarchicalTreemap.coloring.line=a||d3.scaleSequential([GraphHierarchicalTreemap.maxDepth,0],d3.interpolateSinebow));let i=new Map;Object.keys(r).forEach(e=>{e in i||(i[e]=new Map);let t=r[e].values();for(;;){let r=t.next();if(r.done)break;let a=r.value;a in i||(i[a]=new Map),i[e][a]=!0,i[a][e]=!1}}),r=i}createHierarchicalTreemap(e,r,i,n)}function drawTreemap(e,r,t,a){let i=!1,n="root"==e.n?0:a.length+1;if(0==e.children.length)return!0;let l=e.n,c="#"+l;c=c.replace(/\./g,"\\.");let h=$(c)[0];if(null==h)return i;let o=+h.style.width.replace("px",""),p=+h.style.height.replace("px",""),d=o/30+n;n in GraphHierarchicalTreemap.depthPadding||(GraphHierarchicalTreemap.depthPadding[n]=d),e.v=0;const s=(e=>d3.treemap().tile(d3.treemapSquarify.ratio(1.1)).size([o,p]).paddingOuter(d).paddingInner(d).round(!0)(d3.hierarchy(e).sum(e=>e.v)))(e);let u=d3.group(s,e=>e.depth),f="#g-"+l;f=f.replace(/\./g,"\\.");let g=$(f)[0],m=null==g?0:+g.getAttribute("x"),y=null==g?0:+g.getAttribute("y"),w=u.get(0),x=u.get(1);function G(e,r,t){if(e.x1-e.x0<GraphHierarchicalTreemap.minPxSize||e.y1-e.y0<GraphHierarchicalTreemap.minPxSize);else if(i=!0,null==NodeLookup[e.data.n]){let i=d3.select("#root").append("g"),n="p-"+(null!=t?t:""),l="depth"+r;i.attr("transform",`translate(${m+e.x0},${y+e.y0})`).attr("x",m+e.x0).attr("y",y+e.y0).attr("class",[n,l].join(" ")).attr("id","g-"+e.data.n);let c=i.append("rect").attr("id",e.data.n).style("width",e.x1-e.x0+"px").style("height",e.y1-e.y0+"px");"root"!=e.data.n&&(c.style("fill",GraphHierarchicalTreemap.coloring.rect(a.length>1?a[1]:e.data.n)(r)),RootNode.addGrandchild(a,new HierarchicalNode(e.data.n,e.data.v)))}}w.forEach(e=>G(e,n,a[a.length-1])),a=a.concat([e.n]),x.forEach(r=>G(r,n+1,e.n));let H=CalculateConnectivity(e.n,d);return GraphHierarchicalTreemap.connectivityGraphs[e.n]=H,t&&DebugDrawConnectivity(H,d),i&&e.children.forEach(e=>{if(e.n in r){let t=r[e.n];Object.keys(t).forEach(r=>{if(null!=NodeLookup[r]){t[r]?DrawLinks(e.n,r):DrawLinks(r,e.n)}})}}),i}function createDefaultColorScheme(e){let r=e=>d3.scaleSequential([GraphHierarchicalTreemap.maxDepth,0],e),t=[r(d3.interpolateInferno),r(d3.interpolateViridis),r(d3.interpolateTurbo),r(d3.interpolateRdYlGn),r(d3.interpolateCool),r(d3.interpolateWarm),r(d3.interpolateBrBG),r(d3.interpolateSinebow),r(d3.interpolatePiYG),r(d3.interpolateRainbow),r(d3.interpolatePRGn)],a=new Map;return e.c.forEach(e=>{let r=Math.floor(Math.random()*t.length);a.set(e.n,t[r])}),function(e){return a.get(e)?a.get(e):d3.scaleSequential([GraphHierarchicalTreemap.maxDepth,0],d3.interpolateBlues)}}function createHierarchicalTreemap(e,r,t=!1,a){"root"==e.n||a.concat([e.n]);if("c"in e){let i={n:e.n,v:e.v,children:[]};e.c.forEach(e=>{i.children.push({n:e.n,v:e.v,children:[]})}),drawTreemap(i,r,t,a)&&(a=a.concat(e.n),e.c.forEach(e=>{setTimeout(()=>{createHierarchicalTreemap(e,r,t,a)},0)}))}}

